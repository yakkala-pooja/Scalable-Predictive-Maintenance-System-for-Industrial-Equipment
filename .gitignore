# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to include the following files:
#  .idea/
#  *.iml
#  *.ipr
#  *.iws
.idea/
*.iml
*.ipr
*.iws

# VS Code
.vscode/
*.code-workspace

# Machine Learning / Data Science specific
# Model files and checkpoints
*.pkl
*.pickle
*.joblib
*.h5
*.hdf5
*.pb
*.onnx
*.tflite
*.pt
*.pth
*.ckpt
*.safetensors

# Large data files
*.csv
*.tsv
*.json
*.parquet
*.feather
*.hdf
*.h5
*.npy
*.npz
*.mat
*.arff
*.libsvm

# Dataset directories
data/raw/
data/processed/
data/interim/
datasets/
raw_data/
processed_data/

# Model artifacts
models/saved/
models/checkpoints/
artifacts/
mlruns/
mlflow/

# Jupyter notebook outputs
*.ipynb

# TensorBoard logs
runs/
tensorboard_logs/
lightning_logs/

# Weights & Biases
wandb/

# MLflow
mlruns/

# DVC
.dvc/
dvc.lock

# Project specific
# Processed data files (these are large and should be regenerated)
processed_train.csv
processed_val.csv
processed_test.csv

# Transformer data (large numpy arrays)
transformer_data/*.npy
transformer_data/*.npz

# Checkpoints directory
checkpoints/

# Logs directory
logs/
*.log

# Plots and visualizations (can be regenerated)
plots/
analysis_plots/
evaluation_plots/

# Configuration files with sensitive data
config/local.yaml
config/production.yaml
.env.local
.env.production

# Docker
.dockerignore

# Kubernetes
*.yaml.bak
*.yml.bak

# Temporary files
*.tmp
*.temp
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Windows
*.lnk

# Linux
*~

# macOS
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Kafka and streaming
kafka_data/
kafka_logs/

# Profiling data
profiling/
*.prof
*.lprof

# Memory dumps
*.dump
*.dmp

# Backup files
*.bak
*.backup
*.old

# Archive files
*.tar
*.tar.gz
*.zip
*.rar
*.7z

# Database files
*.db
*.sqlite
*.sqlite3

# Cache directories
.cache/
cache/

# Node.js (if using any frontend tools)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Local development
local/
dev/
development/

# Production
prod/
production/

# Test coverage
.coverage
coverage.xml
htmlcov/

# Documentation builds
docs/_build/
site/

# Sphinx
docs/_build/

# MkDocs
site/

# Read the Docs
.readthedocs.yml

# GitHub Actions
.github/workflows/

# Git hooks
.git/hooks/

# Editor directories and files
.vscode/
.idea/
*.swp
*.swo
*~

# Local configuration
config/local/
.env.local
.env.development
.env.test
.env.production

# Secrets and credentials
secrets/
credentials/
*.key
*.pem
*.p12
*.pfx

# API keys and tokens
api_keys.txt
tokens.txt
secrets.yaml
secrets.yml

# SSL certificates
*.crt
*.csr
*.pem
*.key

# SSH keys
id_rsa
id_rsa.pub
id_ed25519
id_ed25519.pub

# GPG keys
*.gpg
*.asc

# Docker volumes
docker-volumes/
volumes/

# Kubernetes secrets
k8s/secrets/

# Terraform
*.tfstate
*.tfstate.*
.terraform/
.terraform.lock.hcl

# Ansible
*.retry

# Vagrant
.vagrant/

# Virtual machines
*.vmdk
*.vdi
*.vbox

# Cloud credentials
.aws/
.gcp/
.azure/

# Monitoring and logging
monitoring/
grafana/
prometheus/
*.log.*

# Performance profiling
perf.data
perf.data.old

# Memory profiling
*.mem
*.heap

# System files
System Volume Information/
$RECYCLE.BIN/ 